#pragma once

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// НАСТРОЙКИ ПРОШИВКИ
// FIRMWARE SETTINGS
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------------------------------------------------------------------
#define STM32_BOARD 1
//--------------------------------------------------------------------------------------------------------------------------------
#define TARGET_BOARD STM32_BOARD
//--------------------------------------------------------------------------------------------------------------------------------
#if (TARGET_BOARD == STM32_BOARD)
  #define digitalPinToInterrupt(x) x // в STM32GENERIC не описан digitalPinToInterrupt !!!!
  #include "Configuration_STM32.h"
  #include "Configuration_STM32_HARDWARE.h"  
#else
  #error "Unknown target board!"
#endif

//--------------------------------------------------------------------------------------------------------------------------------
// подключаем настройки отладочных режимов
// include debug modes (dump to Serial)
#include "Configuration_DEBUG.h"

//--------------------------------------------------------------------------------------------------------------------------------
// подключаем общие для всех плат настройки
// include shared settings
#include "Configuration_Shared.h"

//--------------------------------------------------------------------------------------------------------------------------------
#if defined(USE_WIFI_MODULE) || defined(USE_SCENE_MODULE) || defined(USE_LOG_MODULE) || defined(USE_SMS_MODULE) || (defined(SENSORS_SETTINGS_ON_SD_ENABLED) && defined(USE_LCD_MODULE))
  #define SD_USED
#endif
//--------------------------------------------------------------------------------------------------------------------------------
#ifdef USE_EXTERNAL_WATCHDOG
extern void updateExternalWatchdog();
#endif
//--------------------------------------------------------------------------------------------------------------------------------
